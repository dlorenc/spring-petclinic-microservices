steps:
- name: maven:3-jdk-8
  entrypoint: 'mvn'
  args: ['clean', 'install', '-PbuildDocker', '-DdockerImageTags=${TAG_NAME}', '-Ddocker.image.prefix=gcr.io/protokit-238521/petclinic-app']
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/protokit-238521/petclinic-app/grafana:${TAG_NAME}', 'docker/grafana']
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/protokit-238521/petclinic-app/prometheus:${TAG_NAME}', 'docker/prometheus']
images:
- gcr.io/protokit-238521/petclinic-app/grafana:${TAG_NAME}
- gcr.io/protokit-238521/petclinic-app/prometheus:${TAG_NAME}
- gcr.io/protokit-238521/petclinic-app/spring-petclinic-hystrix-dashboard:${TAG_NAME}
- gcr.io/protokit-238521/petclinic-app/spring-petclinic-api-gateway:${TAG_NAME}
- gcr.io/protokit-238521/petclinic-app/spring-petclinic-discovery-server:${TAG_NAME}
- gcr.io/protokit-238521/petclinic-app/spring-petclinic-config-server:${TAG_NAME}
- gcr.io/protokit-238521/petclinic-app/spring-petclinic-visits-service:${TAG_NAME}
- gcr.io/protokit-238521/petclinic-app/spring-petclinic-vets-service:${TAG_NAME}
- gcr.io/protokit-238521/petclinic-app/spring-petclinic-customers-service:${TAG_NAME}
- gcr.io/protokit-238521/petclinic-app/spring-petclinic-admin-server:${TAG_NAME}
